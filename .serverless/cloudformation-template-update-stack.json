{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "HelloLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/trainee-things-dev-hello"
      }
    },
    "CalcLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/trainee-things-dev-calc"
      }
    },
    "GetCalcFromDbLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/trainee-things-dev-getCalcFromDb"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "trainee-things",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/trainee-things-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/trainee-things-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:PutItem",
                    "dynamodb:Get*",
                    "dynamodb:Scan*",
                    "dynamodb:UpdateItem",
                    "dynamodb:DeleteItem"
                  ],
                  "Resource": "arn:aws:dynamodb:eu-central-1:232608688838:table/trainee-things-calcResult-dev"
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "trainee-things",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "HelloLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/trainee-things/dev/1655823683239-2022-06-21T15:01:23.239Z/trainee-things.zip"
        },
        "Handler": "handler.hello",
        "Runtime": "python3.8",
        "FunctionName": "trainee-things-dev-hello",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "DYNAMO_DB_CALC_RESULTS": "trainee-things-calcResult-dev"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "HelloLogGroup"
      ]
    },
    "CalcLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/trainee-things/dev/1655823683239-2022-06-21T15:01:23.239Z/trainee-things.zip"
        },
        "Handler": "calculation_handler.calculate_response",
        "Runtime": "python3.8",
        "FunctionName": "trainee-things-dev-calc",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "DYNAMO_DB_CALC_RESULTS": "trainee-things-calcResult-dev"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "CalcLogGroup"
      ]
    },
    "GetCalcFromDbLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/trainee-things/dev/1655823683239-2022-06-21T15:01:23.239Z/trainee-things.zip"
        },
        "Handler": "calculation_handler.get_latest_dynamo_entry",
        "Runtime": "python3.8",
        "FunctionName": "trainee-things-dev-getCalcFromDb",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "DYNAMO_DB_CALC_RESULTS": "trainee-things-calcResult-dev"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "GetCalcFromDbLogGroup"
      ]
    },
    "HelloLambdaVersionP9IOIOZICRvxQAifXCIwKZH6DQJ7lREjj0e4QNjqTY": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "HelloLambdaFunction"
        },
        "CodeSha256": "r8cGQgm4QFAe65VVPEMd9Zhd6Gc6h3JQm9PD3J4Jswo="
      }
    },
    "CalcLambdaVersionlWhFlN6IPWpZXwoimcXyz0uOgeeclEOx1YMANq2P4I": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CalcLambdaFunction"
        },
        "CodeSha256": "r8cGQgm4QFAe65VVPEMd9Zhd6Gc6h3JQm9PD3J4Jswo="
      }
    },
    "GetCalcFromDbLambdaVersion7opVXpOlBt6foiDbnoMLgEVR8ieeTDM1JhBLGk3p0d8": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetCalcFromDbLambdaFunction"
        },
        "CodeSha256": "r8cGQgm4QFAe65VVPEMd9Zhd6Gc6h3JQm9PD3J4Jswo="
      }
    },
    "HttpApi": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "dev-trainee-things",
        "ProtocolType": "HTTP"
      }
    },
    "HttpApiStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "StageName": "$default",
        "AutoDeploy": true,
        "DefaultRouteSettings": {
          "DetailedMetricsEnabled": false
        }
      }
    },
    "HelloLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "HelloLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationHello": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "HelloLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 6500
      }
    },
    "HttpApiRouteGet": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationHello"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationHello"
    },
    "CalcLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "CalcLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationCalc": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "CalcLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 6500
      }
    },
    "HttpApiRoutePostCalculate": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "POST /calculate",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationCalc"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationCalc"
    },
    "GetCalcFromDbLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetCalcFromDbLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationGetCalcFromDb": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "GetCalcFromDbLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 6500
      }
    },
    "HttpApiRouteGetLatest": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /latest",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationGetCalcFromDb"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationGetCalcFromDb"
    },
    "CustomerTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "primary_key",
            "AttributeType": "S"
          },
          {
            "AttributeName": "created_on",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": [
          {
            "AttributeName": "primary_key",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "created_on",
            "KeyType": "RANGE"
          }
        ],
        "TableName": "trainee-things-calcResult-dev"
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-trainee-things-dev-ServerlessDeploymentBucketName"
      }
    },
    "HelloLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "HelloLambdaVersionP9IOIOZICRvxQAifXCIwKZH6DQJ7lREjj0e4QNjqTY"
      },
      "Export": {
        "Name": "sls-trainee-things-dev-HelloLambdaFunctionQualifiedArn"
      }
    },
    "CalcLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CalcLambdaVersionlWhFlN6IPWpZXwoimcXyz0uOgeeclEOx1YMANq2P4I"
      },
      "Export": {
        "Name": "sls-trainee-things-dev-CalcLambdaFunctionQualifiedArn"
      }
    },
    "GetCalcFromDbLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetCalcFromDbLambdaVersion7opVXpOlBt6foiDbnoMLgEVR8ieeTDM1JhBLGk3p0d8"
      },
      "Export": {
        "Name": "sls-trainee-things-dev-GetCalcFromDbLambdaFunctionQualifiedArn"
      }
    },
    "HttpApiId": {
      "Description": "Id of the HTTP API",
      "Value": {
        "Ref": "HttpApi"
      },
      "Export": {
        "Name": "sls-trainee-things-dev-HttpApiId"
      }
    },
    "HttpApiUrl": {
      "Description": "URL of the HTTP API",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "HttpApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            }
          ]
        ]
      },
      "Export": {
        "Name": "sls-trainee-things-dev-HttpApiUrl"
      }
    }
  }
}